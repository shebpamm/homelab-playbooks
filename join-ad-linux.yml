- hosts: virtual
  roles:
    - common
    - active_directory

  become: true
  vars:
    AD_Domain: AD.SORSA.CLOUD
    AD_Domain_alt: ad.sorsa.cloud
    Join_OU: DC=ad,DC=sorsa,DC=cloud
    SRV_ADM_GRP_OU: OU=groups,DC=ad,DC=sorsa,DC=cloud
    username: "{{ ad_admin_username }}"
    password: "{{ ad_admin_password }}"
    
    ssh_sftp_location: "{{ sftp_server_location }}"

  tasks:
  - name: Checking if packages required to join AD realm are present
    package:
      name: "{{ active_directory_pkgs }}"
      state: latest

  - name: Configuring krb5.conf
    template:
      src: krb5.j2
      dest: /etc/krb5.conf
      owner: root
      group: root
      mode: 0644

  - name: Create /etc/krb5.conf.d
    file:
      path: /etc/krb5.conf.d
      state: directory
      owner: root
      group: root
      mode: 755

  - name: Joinining the AD realm (creating AD computer account and updating /etc/krb5.keytab)
    shell: echo '{{ password }}' | adcli join --stdin-password {{ AD_Domain }} -U {{ username }} --domain-ou={{ Join_OU }}

  - name: Creating AD server admin group
    shell: echo '{{ password }}' | adcli create-group ADMIN_{{ ansible_hostname }} --stdin-password --domain={{ AD_Domain }} --description="Admin group for {{ ansible_hostname }} server" --domain-ou={{ SRV_ADM_GRP_OU }} -U {{ username }}
    register: group_result
    failed_when: group_result.rc != 0 and group_result.rc != 5

  - name: Configuring sssd.conf
    template:
      src: sssd.conf.j2
      dest: /etc/sssd/sssd.conf
      owner: root
      group: root
      mode: 0600

  - name: Configuring sudoers
    template:
      src: ADsudoers.j2
      dest: /etc/sudoers.d/ADsudoers
      owner: root
      group: root
      mode: 0440

  - name: Configuring /etc/ssh/sshd_config
    template:
      src: sshd_config.j2
      dest: /etc/ssh/sshd_config
      owner: root
      group: root
      mode: 0600

  - name: Configuring PAM/SSHD to use SSSD on RHEL
    shell: authselect select sssd with-mkhomedir --force
    when: ansible_os_family == 'RedHat'

  - name: Configuring PAM to enable mkhomedir on Ubuntu
    shell: pam-auth-update --enable mkhomedir
    when: ansible_os_family == 'Debian'


  - name: Enabling oddjobd service
    systemd:
      name: oddjobd.service
      enabled: yes
      state: started

  - name: Restarting SSSD
    systemd:
      name: sssd
      enabled: yes
      state: restarted

  - name: Restarting SSHD
    systemd:
      name: sshd
      enabled: yes
      state: restarted
